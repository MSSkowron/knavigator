Metryki typu Gauge

Metryki typu Gauge przechowują wartość liczbową, która może zarówno rosnąć, jak i maleć – są wykorzystywane do monitorowania stanów czasowych, liczników lub dynamicznych wartości.

1.1. unified_job_created_timestamp_seconds

Opis: Przechowuje znacznik czasu (timestamp) utworzenia Job’a (zarówno standardowego K8s, jak i Volcano).

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level]

Uwagi: Wartość ustawiana jest jako wynik konwersji daty stworzenia (timestamp) do liczby sekund od epoki (epoch). Ta metryka pozwala stwierdzić, kiedy obiekt Job został utworzony. Wartość jest ustawiana, jeśli czas utworzenia jest dostępny w metadanych obiektu Job.

1.2. unified_job_start_timestamp_seconds

Opis: Określa znacznik czasu (timestamp), kiedy Job po raz pierwszy rozpoczął działanie (start).

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level]

Uwagi: Metryka służy do określenia momentu rozpoczęcia wykonywania Job’a. Dla Job K8s pochodzi z status.startTime. Dla VolcanoJob jest ustalany na podstawie najwcześniejszego warunku Running w status.conditions (i cachowany dla danego UID). Wartość jest ustawiana, jeśli czas startu jest dostępny.

1.3. unified_job_completion_timestamp_seconds

Opis: Rejestruje znacznik czasu ukończenia (sukces lub niepowodzenie) Job’a.

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level, unified_job_status]

Uwagi: Wartość jest ustawiana tylko wtedy, gdy Job zakończył działanie (sukcesem lub porażką) i udało się określić zarówno czas zakończenia, jak i finalny status (Succeeded lub Failed). Status jest dodawany jako etykieta unified_job_status. Dla Job K8s czas jest brany z status.completionTime lub z warunków (Complete lub Failed). Dla VolcanoJob czas jest brany z status.state.lastTransitionTime, gdy faza to Completed, Failed, Aborted, Terminated.

1.4. unified_job_wait_duration_seconds

Opis: Mierzy czas oczekiwania w sekundach, czyli okres między utworzeniem a rozpoczęciem wykonywania Job’a.

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level]

Uwagi: Wartość ta jest wyliczana jako różnica między czasem startu (unified_job_start_timestamp_seconds) a czasem utworzenia (unified_job_created_timestamp_seconds). Ustawiana tylko, gdy oba te czasy są dostępne. W przypadku ujemnej wartości (co nie powinno mieć miejsca) następuje korekta do zera.

1.5. unified_job_execution_duration_seconds

Opis: Określa czas trwania wykonywania Job’a, mierzony od momentu rozpoczęcia działania do momentu zakończenia (sukces lub błąd).

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level, unified_job_status]

Uwagi: Wartość jest obliczana jako różnica między czasem zakończenia (unified_job_completion_timestamp_seconds) a czasem startu (unified_job_start_timestamp_seconds). Ustawiana tylko wtedy, gdy oba te czasy są dostępne oraz określono finalny status (unified_job_status). W przypadku ujemnej wartości następuje korekta do zera. Pozwala zbadać, jak długo trwała praca zadania.

1.6. unified_job_total_duration_seconds

Opis: Mierzy całkowity czas życia Job’a, czyli okres od momentu utworzenia do zakończenia (sukces lub błąd).

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level, unified_job_status]

Uwagi: Wartość jest obliczana jako różnica między czasem zakończenia (unified_job_completion_timestamp_seconds) a czasem utworzenia (unified_job_created_timestamp_seconds). Ustawiana tylko wtedy, gdy oba te czasy są dostępne oraz określono finalny status (unified_job_status). W przypadku ujemnej wartości następuje korekta do zera. Dzięki tej metryce można ocenić łączny czas przetwarzania danego zadania.

1.7. unified_job_status_phase

Opis: Reprezentuje bieżący stan (fazę) Job’a, gdzie wartości liczbowe odpowiadają konkretnym statusom (np. Pending=0, Running=1, Succeeded=2, Failed=3 itd.).

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level]

Uwagi: Wartość numeryczna jest ustalana na podstawie słownika JOB_STATUS_MAP (patrz sekcja 3.1) i bieżącego stanu joba. Dla Job K8s stan jest określany na podstawie liczników succeeded, failed, active i flagi suspend. Dla VolcanoJob stan pochodzi z status.state.phase. Ułatwia tworzenie zapytań w Prometheusie dotyczących aktualnego statusu Job’a.

1.8. unified_job_concurrency_count

Opis: Liczy liczbę jobów w danej fazie (statusie) dla konkretnej kolejki (unified_job_queue) i przestrzeni nazw (unified_job_namespace).

Typ: Gauge

Etykiety: [unified_job_queue, unified_job_phase, unified_job_namespace]

Uwagi: Metryka jest aktualizowana przy każdej iteracji zbierania metryk. Agreguje liczbę jobów (zarówno K8s jak i Volcano) znajdujących się aktualnie w określonej fazie (np. "Pending", "Running") w ramach danej kolejki i przestrzeni nazw. Faza jest brana jako string (klucz) ze słownika JOB_STATUS_MAP. Pomaga monitorować obciążenie kolejek i rozkład statusów jobów w poszczególnych namespace'ach. Metryki dla kombinacji (kolejka, faza, namespace), które nie mają już aktywnych jobów w danym cyklu (lub cała para kolejka/namespace jest nieaktywna), są usuwane.

1.9. unified_job_tas_preference_met

Opis: Wskazuje, czy preferowane (miękkie, 'soft'/'preferred') ograniczenie topologii zostało spełnione dla Joba.

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level]

Uwagi: Metryka jest ustawiana tylko dla jobów, które mają zdefiniowane ograniczenie typu preferred (etykieta unified_job_tas_constraint_type="preferred"). Wartość 1 oznacza, że wszystkie działające pody joba zostały umieszczone w tej samej domenie topologii określonej przez unified_job_tas_constraint_level. Wartość 0 oznacza, że preferencja nie została spełniona (pody w różnych domenach) lub nie można było tego zweryfikować (np. brak etykiet na węzłach, job jeszcze w stanie Pending, błąd pobierania informacji o podach). Status jest obliczany tylko raz dla jobów w stanie nie-terminalnym i cachowany. Metryka jest usuwana, gdy job zostanie usunięty z klastra. Dla jobów bez ograniczenia 'preferred' ta metryka nie jest ustawiana.

1.10. unified_job_tas_requirement_met

Opis: Wskazuje, czy wymagane (twarde, 'hard'/'required') ograniczenie topologii zostało spełnione dla Joba.

Typ: Gauge

Etykiety: [unified_job_name, unified_job_namespace, unified_job_uid, unified_job_kind, unified_job_queue, unified_job_tas_constraint_type, unified_job_tas_constraint_level]

Uwagi: Metryka jest ustawiana tylko dla jobów, które mają zdefiniowane ograniczenie typu required (etykieta unified_job_tas_constraint_type="required").

Wartość 1 oznacza, że wymaganie zostało spełnione (wszystkie działające pody w tej samej domenie topologii zdefiniowanej przez unified_job_tas_constraint_level).

Wartość 0 oznacza, że wymaganie zostało ZŁAMANE (pody joba zostały umieszczone w różnych domenach topologii mimo twardego wymagania).

Wartość -1 oznacza, że status wymagania jest nieznany lub nie dotyczy (N/A) - np. job jest w stanie Pending, wystąpił błąd podczas weryfikacji (brak etykiet na węzłach, błąd API), lub job zakończył się zanim można było zweryfikować rozmieszczenie.
Status jest obliczany tylko raz dla jobów w stanie nie-terminalnym i cachowany. Metryka jest usuwana, gdy job zostanie usunięty z klastra. Dla jobów bez ograniczenia 'required' ta metryka nie jest ustawiana.

Metryki typu Histogram

Histogramy umożliwiają zbieranie rozkładu wartości (np. czasów trwania) poprzez obserwację, ile razy wartość mieści się w określonym przedziale (bucket). Wartości są obserwowane tylko raz dla danego UID joba, aby uniknąć wielokrotnych zapisów dla tego samego zdarzenia (np. ukończenia joba).

2.1. unified_job_wait_duration_seconds_histogram

Opis: Histogram przedstawiający rozkład czasu oczekiwania (od utworzenia do startu) Job’a w sekundach.

Typ: Histogram

Etykiety: [unified_job_namespace]

Buckety: [0.1, 1.0, 5.0, 15.0, 30.0, 60.0, 120.0, 300.0, 600.0, 1800.0, 3600.0, +inf]

Uwagi: Metryka obserwuje czas oczekiwania (różnica między startem a utworzeniem) tylko raz dla danego UID joba, gdy czas startu zostanie ustalony. Dzięki zdefiniowanym bucketom, histogram pozwala ocenić, w których przedziałach czasowych najczęściej występują opóźnienia, agregując dane tylko po przestrzeni nazw (unified_job_namespace). Histogramy dla namespace'ów, w których nie ma już aktywnych jobów (w danym cyklu zbierania metryk), są usuwane.

2.2. unified_job_execution_duration_seconds_histogram

Opis: Histogram rejestrujący rozkład czasów trwania wykonania Job’a (od startu do zakończenia) w sekundach.

Typ: Histogram

Etykiety: [unified_job_namespace, unified_job_status]

Buckety: [0.1, 1.0, 5.0, 15.0, 30.0, 60.0, 120.0, 300.0, 600.0, 1800.0, 3600.0, +inf]

Uwagi: Metryka obserwuje czas wykonania (różnica między zakończeniem a startem) tylko raz dla danego UID joba, gdy job się zakończy (sukcesem lub porażką) i oba czasy (start, zakończenie) są dostępne. Umożliwia analizę, jakie czasy trwania mają zadania w zależności od ich finalnego statusu (unified_job_status, np. Succeeded vs Failed) oraz przestrzeni nazw (unified_job_namespace). Histogramy dla kombinacji (namespace, status), które nie odpowiadają już żadnym zakończonym jobom w danym cyklu (lub cały namespace jest nieaktywny), mogą zostać usunięte (dokładniej: histogramy dla całych nieaktywnych namespace'ów są usuwane).

2.3. unified_job_total_duration_seconds_histogram

Opis: Histogram przedstawiający rozkład całkowitych czasów życia Job’a (od utworzenia do zakończenia) w sekundach.

Typ: Histogram

Etykiety: [unified_job_namespace, unified_job_status]

Buckety: [0.1, 1.0, 5.0, 15.0, 30.0, 60.0, 120.0, 300.0, 600.0, 1800.0, 3600.0, +inf]

Uwagi: Metryka obserwuje całkowity czas życia (różnica między zakończeniem a utworzeniem) tylko raz dla danego UID joba, gdy job się zakończy (sukcesem lub porażką) i oba czasy (utworzenie, zakończenie) są dostępne. Pozwala ocenić ogólny czas przetwarzania jobów, agregując dane dla różnych przestrzeni nazw (unified_job_namespace) i finalnych statusów (unified_job_status). Histogramy dla kombinacji (namespace, status), które nie odpowiadają już żadnym zakończonym jobom w danym cyklu (lub cały namespace jest nieaktywny), mogą zostać usunięte (dokładniej: histogramy dla całych nieaktywnych namespace'ów są usuwane).

Dodatkowe elementy

3.1. JOB_STATUS_MAP

Opis: Słownik Python używany wewnętrznie przez eksporter do mapowania tekstowych stanów Job’a na wartości liczbowe dla metryki unified_job_status_phase. Zdefiniowany w kodzie jako:

JOB_STATUS_MAP = {
    "Pending": 0,
    "Running": 1,
    "Succeeded": 2,
    "Failed": 3,
    "Completed": 2, # Alias dla Succeeded (głównie dla Volcano)
    "Terminating": 4,
    "Terminated": 5,
    "Aborting": 6,
    "Aborted": 7,
    "Unknown": -1,
}


Uwagi: Mimo że nie jest to bezpośrednio metryka Prometheus, słownik ten jest kluczowy do interpretacji wartości metryki unified_job_status_phase. Etykieta unified_job_phase w metryce unified_job_concurrency_count używa kluczy (stringów) z tego słownika.

3.2. Etykiety związane z TAS (Topology Aware Scheduling)

Opis: Dwie etykiety zostały dodane do większości metryk typu Gauge (patrz sekcja 1) w celu dostarczenia informacji o ograniczeniach topologii zdefiniowanych dla Joba.

Etykiety:

unified_job_tas_constraint_type: Określa typ ograniczenia topologii. Możliwe wartości:

required: Wymagane (twarde) ograniczenie. Dla Kueue pochodzi z adnotacji kueue.x-k8s.io/podset-required-topology. Dla Volcano odpowiada spec.networkTopology.mode: hard.

preferred: Preferowane (miękkie) ograniczenie. Dla Kueue pochodzi z adnotacji kueue.x-k8s.io/podset-preferred-topology. Dla Volcano odpowiada spec.networkTopology.mode: soft.

none: Brak zdefiniowanego ograniczenia topologii.

error: Wystąpił błąd podczas próby odczytania informacji o ograniczeniu.

unknown_mode (Tylko Volcano): Tryb w networkTopology nie był ani hard, ani soft.

unified_job_tas_constraint_level: Określa poziom topologii (klucz etykiety węzła), którego dotyczy ograniczenie.

Dla Kueue (Job K8s): Wartość pobrana bezpośrednio z adnotacji (np. kubernetes.io/hostname, topology.kubernetes.io/zone, network.topology.kubernetes.io/block).

Dla Volcano (VolcanoJob): Wartość mapowana z numerycznego spec.networkTopology.highestTierAllowed na odpowiedni klucz topologii (np. 1 -> kubernetes.io/hostname, 2 -> network.topology.kubernetes.io/block, 3 -> network.topology.kubernetes.io/spine, 4 -> network.topology.kubernetes.io/datacenter).

none: Brak zdefiniowanego ograniczenia.

error: Wystąpił błąd podczas próby odczytania poziomu ograniczenia.

unknown_tier (Tylko Volcano): Nie można było określić poziomu (highestTierAllowed brak lub niepoprawny).

volcano_tier_X_unmapped (Tylko Volcano): Wartość numeryczna highestTierAllowed nie miała zdefiniowanego mapowania na klucz topologii.

Uwagi: Te etykiety pozwalają filtrować i agregować metryki jobów w zależności od zdefiniowanych dla nich wymagań dotyczących rozmieszczenia podów w klastrze. Są one ustalane na podstawie metadanych/specyfikacji Joba (K8s lub Volcano).
