apiVersion: nvidia.com/v1
kind: NGCJob
metadata:
  name: "{{._NAME_}}"
  namespace: ngcc-user
spec:
  externalServiceName: www
  replicas: 1
  runPolicy:
    coScheduling: null
    minTimesliceSeconds: {{or .minTimesliceSeconds "null" }}
    preemptClass: {{or .preemptClass "RUNONCE" }}
    totalRuntimeSeconds: {{or .totalRuntimeSeconds 86400 }}
  template:
    metadata:
      annotations:
        orgName: {{or .orgName "nvidia" }}
        teamName: {{or .teamName "team" }}
        topologyConstraint: ""
        userId: "{{or .userId "1"}}"
        starfleetId: "300"
      labels:
        aceId: "{{.aceId}}"
        job_priority_level: {{or .job_priority_level "normal" }}
        job_priority_order: "{{or .job_priority_order "50" }}"
        launcher-service-name: launcher-svc-{{._NAME_}}
        ngcjob-name: "{{._NAME_}}"
        nodeInstance: {{.instance}}
        profiler: none
    spec:
      containers:
      - args:
        - -c
        - {{.command}}
        command:
        - /bin/sh
        env:
        - name: NGC_DATASETS_INFO
        - name: NGC_JOB_ID
          value: "{{._NAME_}}"
        - name: NGC_RUN_ID
          value: "1"
        - name: NGC_GRACE_PERIOD_SECS
          value: "5"
        image: {{.image}}
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - echo [$(date)] Starting container... >> /result/ngc-lifecycle.log
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - echo [$(date)] Stopping with SIGTERM >> /result/ngc-lifecycle.log;
                kill -- -1
        livenessProbe:
          exec:
            command:
            - touch
            - /heartbeat/heartbeat
          failureThreshold: 2147483647
          periodSeconds: 3
        name: "{{._NAME_}}"
        resources:
          limits:
            cpu: "{{.cpu}}"
            memory: {{.memory}}
            nvidia.com/gpu: "{{.gpu}}"
          requests:
            cpu: "{{.cpu}}"
            memory: {{.memory}}
        securityContext:
          capabilities:
            add:
            - SYS_PTRACE
        volumeMounts:
        - mountPath: /ubin
          name: checkpoint-config
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /raid
          name: raid-vol
        - mountPath: /heartbeat
          name: heartbeat
      - env:
        - name: NGC_JOB_ID
          value: "{{._NAME_}}"
        - name: LOGSPACE_DIR
          value: /logspace
        - name: POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: NGC_RUN_ID
          value: "1"
        - name: NGC_GRACE_PERIOD_SECS
          value: "5"
        image: nvcr.io/nv-ngc-devops/joblog-collector:1.9.0
        name: joblog-collector
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/log/pods
          name: pods-log
          readOnly: true
        - mountPath: /var/log/containers
          name: containers-log
          readOnly: true
        - mountPath: /heartbeat
          name: heartbeat
        - mountPath: /var/log/pos
          name: position-files
      enableServiceLinks: false
      imagePullSecrets:
      - name: "{{._NAME_}}"
      - name: nvidia-ngcuser-pull-secret
      initContainers:
      - command:
        - /root/scripts/run_all
        env:
        - name: MULTINODE
          value: "false"
        - name: MIG
          value: "false"
        - name: CPU
          value: "true"
        image: nvcr.io/nv-ngc-devops/prolog-checks:non-mofed-1.0.0
        imagePullPolicy: IfNotPresent
        name: init-prolog-checks
        resources:
          limits:
            cpu: "{{.cpu}}"
            memory: {{.memory}}
            nvidia.com/gpu: "{{.gpu}}"
          requests:
            cpu: "{{.cpu}}"
            memory: {{.memory}}
        terminationMessagePath: /tmp/termination.log
        volumeMounts:
        - mountPath: /raid
          name: raid-vol
      - command:
        - /bin/true
        image: stg.nvcr.io/nvidia/pytorch:21.10-py3
        imagePullPolicy: Always
        name: init-{{._NAME_}}
        resources:
          limits:
            cpu: "{{.cpu}}"
            memory: {{.memory}}
            nvidia.com/gpu: "{{.gpu}}"
          requests:
            cpu: "{{.cpu}}"
            memory: {{.memory}}
      - command:
        - /bin/true
        image: nvcr.io/nv-ngc-devops/joblog-collector:1.9.0
        imagePullPolicy: IfNotPresent
        name: init-joblog-collector
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
      nodeSelector:
        nodeGroup: gpu
      restartPolicy: Never
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
      - hostPath:
          path: /raid/tmp
          type: DirectoryOrCreate
        name: raid-vol
      - configMap:
          defaultMode: 493
          name: checkpoint-config
        name: checkpoint-config
      - hostPath:
          path: /var/log/pods
          type: Directory
        name: pods-log
      - hostPath:
          path: /var/log/containers
          type: Directory
        name: containers-log
      - emptyDir: {}
        name: position-files
      - emptyDir: {}
        name: heartbeat
