# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: test-backfill-1
description: test backfill for yunikorn
tasks:
  - id: configure-nodes-cleanup
    type: Configure
    params:
      nodes:
        - type: test-backfill
          count: 0
          resources:
            cpu: 100100m
            memory: 102450Mi
            pods: 110
      timeout: 5m
  - id: configure-nodes
    type: Configure
    params:
      nodes:
#        - type: test-gang-1
#          count: 90
#          resources:
#            cpu: 1100m
#            memory: 1050Mi
#            pods: 110
        - type: test-gang-2
          count: 3
          resources:
            cpu: 10100m
            memory: 10050Mi
            pods: 110
      timeout: 5m
  - id: register-job
    type: RegisterObj
    params:
      template: "resources/tests-psocala/templates/yunikorn/job-gang.yml"
      nameFormat: "{{.jobName}}-{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-.*"
      podCount: "{{.parallelism}}"
  - id: configure
    type: Configure
    description: set up yunikorn config
    params:
      configmaps:
        - name: yunikorn-configs
          namespace: yunikorn
          op: create
          data:
            queues.yaml: |
              partitions:
                - name: default
                  queues:
                  - name: root
                    queues:
                    - name: sandbox
                      submitacl: '*'
                      properties:
                        application.sort.policy: fifo
                      resources:
                        max:
                          {memory: 1000Gi, vcore: 1000}
      timeout: 1m
  - id: big-cpu-job
    type: SubmitObj
    params:
      refTaskId: register-job
      count: 1
      params:
        jobName: big-cpu-job1
        namespace: default
        parallelism: 8
        completions: 8
        applicationId: big-cpu-job
        queue: root.sandbox
        image: ubuntu
        cpu: 4
        memory: 2Gi
        ttl: 2m
        jitter: 3m