name: yunikorn-fair-share-benchmark-v1
description: |
  Fair Share benchmark for Apache YuniKorn scheduler.

  This benchmark tests whether YuniKorn properly implements fair resource sharing
  between queues with equal weights. YuniKorn uses a hierarchical queue structure
  with weights to determine fair shares.

  The test sets up three child queues under a parent queue with equal weights,
  submits multiple jobs to all queues, and verifies that resources are
  distributed fairly between them.

  Test scenario:
  1. Configure cluster with limited CPU resources (75 CPU total)
  2. Configure YuniKorn with three queues having equal weights
  3. Submit multiple jobs to all queues (each queue requesting 30 CPU)
  4. Verify that all queues receive an equal share of resources (~25 CPU each)
tasks:
  # Configure YuniKorn
  - id: configure-yunikorn
    type: Configure
    params:
      configmaps:
        - name: yunikorn-configs
          namespace: yunikorn
          op: create
          data:
            queues.yaml: |
              partitions:
                - name: default
                  placementRules:
                    - name: tag
                      value: namespace
                      create: true
                  queues:
                  - name: root
                    submitacl: '*'
                    queues:
                    - name: fairshare
                      submitacl: '*'
                      properties:
                        application.sort.policy: fair
                      queues:
                      - name: tenant-a
                        submitacl: '*'
                        resources:
                          guaranteed:
                            memory: 25000Mi
                            vcore: 25000m
                          max:
                            memory: 75000Mi
                            vcore: 75000m
                        properties:
                          weight: 1
                          fairshare.enable: "true"
                      - name: tenant-b
                        submitacl: '*'
                        resources:
                          guaranteed:
                            memory: 25000Mi
                            vcore: 25000m
                          max:
                            memory: 75000Mi
                            vcore: 75000m
                        properties:
                          weight: 1
                          fairshare.enable: "true"
                      - name: tenant-c
                        submitacl: '*'
                        resources:
                          guaranteed:
                            memory: 25000Mi
                            vcore: 25000m
                          max:
                            memory: 75000Mi
                            vcore: 75000m
                        properties:
                          weight: 1
                          fairshare.enable: "true"
      deploymentRestarts:
        - namespace: yunikorn
          name: yunikorn-scheduler
      timeout: 10m

  - id: config-sleep
    type: Sleep
    params:
      timeout: 5s

  # Configure nodes
  - id: configure-nodes
    type: Configure
    params:
      nodes:
        - type: cpu-node
          count: 5
          resources:
            cpu: 15100m  # KWOK potrzebuje 100m → 15000m dostępne
            memory: "15050Mi"  # KWOK potrzebuje 50Mi → 15000Mi dostępne
            pods: 110
      timeout: 5m

  # Register job template
  - id: register-job
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/yunikorn/job.yml"
      nameFormat: "fairshare-v1-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-.*"
      podCount: "{{.replicas}}"

  # Submit 75 jobs for tenant A (requesting 75000m CPU & 7500 Mi Memory - whole free worker nodes resources)
  - id: submit-jobs-tenant-a
    type: SubmitObj
    params:
      refTaskId: register-job
      count: 75
      params:
        namespace: default
        replicas: 1
        minMember: 1
        applicationId: "tenant-a-jobs"
        queue: "root.fairshare.tenant-a"
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  # Submit 75 jobs for tenant B (requesting 75000m CPU & 7500 Mi Memory - whole free worker nodes resources)
  - id: submit-jobs-tenant-b
    type: SubmitObj
    params:
      refTaskId: register-job
      count: 75
      params:
        namespace: default
        replicas: 1
        minMember: 1
        applicationId: "tenant-b-jobs"
        queue: "root.fairshare.tenant-b"
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  # Submit 75 jobs for tenant C (requesting 75000m CPU & 7500 Mi Memory - whole free worker nodes resources)
  - id: submit-jobs-tenant-c
    type: SubmitObj
    params:
      refTaskId: register-job
      count: 75
      params:
        namespace: default
        replicas: 1
        minMember: 1
        applicationId: "tenant-c-jobs"
        queue: "root.fairshare.tenant-c"
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"
