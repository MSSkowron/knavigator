name: yunikorn-fair-share-benchmark-v1
description: |
  Fair Share benchmark for Apache YuniKorn scheduler.

  This benchmark tests whether YuniKorn properly implements fair resource sharing
  between queues with equal weights. YuniKorn uses a hierarchical queue structure
  with weights to determine fair shares.

  The test sets up three child queues under a parent queue with equal weights,
  submits multiple jobs to all queues in three rounds, and verifies that resources are
  distributed fairly between them.

  Test scenario:
  1. Configure cluster with limited CPU resources (75 CPU total)
  2. Configure YuniKorn with three queues having equal weights
  3. Submit jobs to all queues in three balanced rounds
  4. Verify that all queues receive an equal share of resources (~25 CPU each)
tasks:
  # Configure YuniKorn
  - id: configure-yunikorn
    type: Configure
    params:
      configmaps:
        - name: yunikorn-configs
          namespace: yunikorn
          op: create
          data:
            queues.yaml: |
              partitions:
                - name: default
                  placementrules:
                    - name: provided
                      create: false
                  queues:
                  - name: root
                    submitacl: '*'
                    queues:
                    - name: fairshare
                      submitacl: '*'
                      properties:
                        application.sort.policy: fair
                      queues:
                      - name: tenant-a
                        submitacl: '*'
                        properties:
                          application.sort.policy: fifo
                          priority.offset: "0"
                        resources:
                          guaranteed:
                            memory: 25000Mi
                            vcore: 25000m
                          max:
                            memory: 75000Mi
                            vcore: 75000m
                      - name: tenant-b
                        submitacl: '*'
                        properties:
                          application.sort.policy: fifo
                          priority.offset: "0"
                        resources:
                          guaranteed:
                            memory: 25000Mi
                            vcore: 25000m
                          max:
                            memory: 75000Mi
                            vcore: 75000m
                      - name: tenant-c
                        submitacl: '*'
                        properties:
                          application.sort.policy: fifo
                          priority.offset: "0"
                        resources:
                          guaranteed:
                            memory: 25000Mi
                            vcore: 25000m
                          max:
                            memory: 75000Mi
                            vcore: 75000m
      deploymentRestarts:
        - namespace: yunikorn
          name: yunikorn-scheduler
      timeout: 10m

  - id: config-sleep
    type: Sleep
    params:
      timeout: 5s

  # Configure nodes
  - id: configure-nodes
    type: Configure
    params:
      nodes:
        - type: cpu-node
          count: 5
          resources:
            cpu: 15100m # KWOK potrzebuje 100m → 15000m dostępne
            memory: "15050Mi" # KWOK potrzebuje 50Mi → 15000Mi dostępne
            pods: 110
      timeout: 5m

  # Create namespaces for the three tenants
  - id: create-namespaces
    type: Configure
    params:
      namespaces:
        - name: tenant-a
          op: create
        - name: tenant-b
          op: create
        - name: tenant-c
          op: create
      timeout: 1m

  # Register job templates for different batches
  - id: register-job-batch-1
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/yunikorn/job.yml"
      nameFormat: "fairshare-v1-batch1-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-.*"
      podCount: "{{.replicas}}"

  - id: register-job-batch-2
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/yunikorn/job.yml"
      nameFormat: "fairshare-v1-batch2-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-.*"
      podCount: "{{.replicas}}"

  - id: register-job-batch-3
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/yunikorn/job.yml"
      nameFormat: "fairshare-v1-batch3-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-.*"
      podCount: "{{.replicas}}"

  # Runda 1: Pierwszy batch zadań dla wszystkich tenantów (30 zadań każdy)
  - id: submit-jobs-tenant-a-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-a
        replicas: 1
        queue: root.fairshare.tenant-a
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-tenants1a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-b
        replicas: 1
        queue: root.fairshare.tenant-b
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-tenants1b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-c
        replicas: 1
        queue: root.fairshare.tenant-c
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-rounds1
    type: Sleep
    params:
      timeout: 60s

  # Runda 2: Drugi batch zadań dla wszystkich tenantów (25 zadań każdy)
  - id: submit-jobs-tenant-a-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-a
        replicas: 1
        queue: root.fairshare.tenant-a
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-tenants2a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-b
        replicas: 1
        queue: root.fairshare.tenant-b
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-tenants2b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-c
        replicas: 1
        queue: root.fairshare.tenant-c
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-rounds2
    type: Sleep
    params:
      timeout: 60s

  # Runda 3: Trzeci batch zadań dla wszystkich tenantów (20 zadań każdy)
  - id: submit-jobs-tenant-a-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-a
        replicas: 1
        queue: root.fairshare.tenant-a
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-tenants3a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-b
        replicas: 1
        queue: root.fairshare.tenant-b
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m

  - id: wait-between-tenants3b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-c
        replicas: 1
        queue: root.fairshare.tenant-c
        cpu: 1000m
        memory: 1000Mi
        ttl: 5m
