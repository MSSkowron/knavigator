name: kueue-fair-share-benchmark-v4-historical-priority
description: |
  Historical Priority Fair Share benchmark for Kueue.
  Tests dynamic priority based on usage history with 6 tenants.
tasks:
  # Configure Kueue
  - id: configure-kueue
    type: Configure
    params:
      configmaps:
        - name: kueue-manager-config
          namespace: kueue-system
          op: create
          data:
            controller_manager_config.yaml: |
              apiVersion: config.kueue.x-k8s.io/v1beta1
              kind: Configuration
              health:
                healthProbeBindAddress: :8081
              metrics:
                bindAddress: :8080
              webhook:
                port: 9443
              leaderElection:
                leaderElect: true
                resourceName: c1f6bfd2.kueue.x-k8s.io
              controller:
                groupKindConcurrency:
                  Job.batch: 5
                  Pod: 5
                  Workload.kueue.x-k8s.io: 5
                  LocalQueue.kueue.x-k8s.io: 1
                  ClusterQueue.kueue.x-k8s.io: 1
                  ResourceFlavor.kueue.x-k8s.io: 1
              clientConnection:
                qps: 50
                burst: 100
              waitForPodsReady:
                enable: true
                timeout: 10m
              #   blockAdmission: true
              #   requeuingStrategy:
              #     timestamp: Eviction
              #     backoffLimitCount: null # null indicates infinite requeuing
              #     backoffBaseSeconds: 60
              #     backoffMaxSeconds: 3600
              integrations:
                frameworks:
                - "batch/job"
                - "kubeflow.org/mpijob"
                - "ray.io/rayjob"
                - "ray.io/raycluster"
                - "jobset.x-k8s.io/jobset"
                - "kubeflow.org/paddlejob"
                - "kubeflow.org/pytorchjob"
                - "kubeflow.org/tfjob"
                - "kubeflow.org/xgboostjob"
              fairSharing:
               enable: true
               preemptionStrategies: [LessThanOrEqualToFinalShare, LessThanInitialShare]
      deploymentRestarts:
        - namespace: kueue-system
          name: kueue-controller-manager
      timeout: 10m

  - id: config-sleep
    type: Sleep
    params:
      timeout: 5s

  # Configure nodes (10 nodes, 10 CPU/10GB each = 100 CPU/100 GB total)
  - id: configure-nodes
    type: Configure
    params:
      nodes:
        - type: cpu-node
          count: 10
          resources:
            cpu: 10100m # ~10 CPU available per node
            memory: "10050Mi" # ~10 GB available per node
            pods: 10000
      timeout: 5m

  # Create namespaces for all six tenants
  - id: create-namespaces
    type: Configure
    params:
      namespaces:
        - name: tenant-a
          op: create
        - name: tenant-b
          op: create
        - name: tenant-c
          op: create
        - name: tenant-d
          op: create
        - name: tenant-e
          op: create
        - name: tenant-f
          op: create
      timeout: 1m

  # Register Kueue-specific resources
  - id: register-cluster-queue
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/cluster-queue.yaml"

  - id: register-local-queue
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/local-queue.yaml"

  - id: register-resource-flavor
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/resource-flavor.yaml"

  # Register job templates for Phase 1 - all active tenants
  - id: register-job-phase1-tenant-a
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p1-a-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase1-tenant-b
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p1-b-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase1-tenant-c
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p1-c-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase1-tenant-d
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p1-d-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  # Register job templates for Phase 3 - all tenants
  - id: register-job-phase3-a
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p3-a-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase3-b
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p3-b-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase3-c
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p3-c-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase3-d
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p3-d-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase3-e
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p3-e-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-phase3-f
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v4-p3-f-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  # Create resource flavor
  - id: create-resource-flavor
    type: SubmitObj
    params:
      refTaskId: register-resource-flavor
      canExist: true
      params:
        name: "resource-flavor"
        nodeLabels:
          type: kwok

  # Create cluster queues with equal weights for all tenants
  - id: create-cluster-queue-a
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-a-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1 # Equal weight
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 0m # NO GUARANTEE
                    borrowingLimit: 100000m
                  - name: memory
                    nominalQuota: 0Mi # NO GUARANTEE
                    borrowingLimit: 100000Mi

  - id: create-cluster-queue-b
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-b-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1 # Equal weight
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 0m
                    borrowingLimit: 100000m
                  - name: memory
                    nominalQuota: 0Mi
                    borrowingLimit: 100000Mi

  - id: create-cluster-queue-c
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-c-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1 # Equal weight
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 0m
                    borrowingLimit: 100000m
                  - name: memory
                    nominalQuota: 0Mi
                    borrowingLimit: 100000Mi

  - id: create-cluster-queue-d
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-d-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1 # Equal weight
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 0m
                    borrowingLimit: 100000m
                  - name: memory
                    nominalQuota: 0Mi
                    borrowingLimit: 100000Mi

  - id: create-cluster-queue-e
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-e-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1 # Equal weight
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 0m
                    borrowingLimit: 100000m
                  - name: memory
                    nominalQuota: 0Mi
                    borrowingLimit: 100000Mi

  - id: create-cluster-queue-f
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-f-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1 # Equal weight
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 0m
                    borrowingLimit: 100000m
                  - name: memory
                    nominalQuota: 0Mi
                    borrowingLimit: 100000Mi

  # Create the DUMMY ClusterQueue to enable borrowing
  - id: create-dummy-cluster-queue
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: dummy-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 100000m # Full cluster capacity
                    borrowingLimit: 0m
                    lendingLimit: 100000m
                  - name: memory
                    nominalQuota: 100000Mi # Full cluster capacity
                    borrowingLimit: 0Mi
                    lendingLimit: 100000Mi

  # Create local queues for all tenants
  - id: create-local-queue-a
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-a-queue
        namespace: tenant-a
        clusterQueue: tenant-a-cq

  - id: create-local-queue-b
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-b-queue
        namespace: tenant-b
        clusterQueue: tenant-b-cq

  - id: create-local-queue-c
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-c-queue
        namespace: tenant-c
        clusterQueue: tenant-c-cq

  - id: create-local-queue-d
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-d-queue
        namespace: tenant-d
        clusterQueue: tenant-d-cq

  - id: create-local-queue-e
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-e-queue
        namespace: tenant-e
        clusterQueue: tenant-e-cq

  - id: create-local-queue-f
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-f-queue
        namespace: tenant-f
        clusterQueue: tenant-f-cq

  # --- Phase 1: Build Usage History (10 minutes) ---
  - id: phase1-history-building
    type: Repeat
    params:
      duration: 10m
      interval: 10s
      tasks:
        # Tenant A: Highest Load (8 jobs)
        - type: SubmitObj
          params:
            refTaskId: register-job-phase1-tenant-a
            count: 8
            params:
              namespace: tenant-a
              queueName: tenant-a-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "60s"

        # Tenant B: High Load (5 jobs)
        - type: SubmitObj
          params:
            refTaskId: register-job-phase1-tenant-b
            count: 5
            params:
              namespace: tenant-b
              queueName: tenant-b-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "60s"

        # Tenant C: Medium Load (3 jobs)
        - type: SubmitObj
          params:
            refTaskId: register-job-phase1-tenant-c
            count: 3
            params:
              namespace: tenant-c
              queueName: tenant-c-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "60s"

        # Tenant D: Low Load (1 job)
        - type: SubmitObj
          params:
            refTaskId: register-job-phase1-tenant-d
            count: 1
            params:
              namespace: tenant-d
              queueName: tenant-d-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "60s"

        # Tenants E and F: No Load (inactive)

  # --- Phase 2: Cleanup pause ---
  # Wait for all Phase 1 jobs to complete (last jobs at 600s + 60s TTL = 660s)
  # Adding buffer, total wait 120s from end of Phase 1
  - id: stabilize-after-phase1
    type: Sleep
    params:
      timeout: 240s

  - id: remove-all-jobs
    type: DeleteAllJobs

  - id: stabilize-after-jobs-cleanup
    type: Sleep
    params:
      timeout: 30s

  # --- Phase 3: Test Prioritization ---
  - id: phase3-parallel-burst
    type: Parallel
    params:
      tasks:
        # All tenants submit 40 jobs each
        - type: SubmitObj
          params:
            refTaskId: register-job-phase3-a
            count: 40
            params:
              namespace: tenant-a
              queueName: tenant-a-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-phase3-b
            count: 40
            params:
              namespace: tenant-b
              queueName: tenant-b-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-phase3-c
            count: 40
            params:
              namespace: tenant-c
              queueName: tenant-c-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-phase3-d
            count: 40
            params:
              namespace: tenant-d
              queueName: tenant-d-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-phase3-e
            count: 40
            params:
              namespace: tenant-e
              queueName: tenant-e-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-phase3-f
            count: 40
            params:
              namespace: tenant-f
              queueName: tenant-f-queue
              replicas: 1
              completionMode: NonIndexed
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"
