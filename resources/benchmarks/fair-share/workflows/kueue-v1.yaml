name: kueue-fair-share-benchmark-v1
description: |
  Fair Share benchmark dla schedulera Kueue.

  Test sprawdza prawidłową implementację mechanizmu fair sharing
  między tenantami o identycznych priorytetach i wagach.

  Test tworzy trzy przestrzenie nazw z identycznymi ClusterQueue w kohorcie,
  następnie wysyła zadania do wszystkich tenantów i weryfikuje sprawiedliwy podział zasobów.

  Scenariusz testu:
  1. Konfiguracja klastra z ograniczonymi zasobami (75 CPU i 75GB pamięci łącznie)
  2. Konfiguracja Kueue z włączonym mechanizmem fairSharing
  3. Utworzenie trzech tenantów o równym priorytecie i wadze
  4. Wysłanie wielu zadań sekwencyjnie do wszystkich tenantów
  5. Weryfikacja równego podziału zasobów między tenantami
tasks:
  # Configure Kueue
  - id: configure-kueue
    type: Configure
    params:
      configmaps:
        - name: kueue-manager-config
          namespace: kueue-system
          op: create
          data:
            controller_manager_config.yaml: |
              apiVersion: config.kueue.x-k8s.io/v1beta1
              kind: Configuration
              health:
                healthProbeBindAddress: :8081
              metrics:
                bindAddress: :8080
              webhook:
                port: 9443
              leaderElection:
                leaderElect: true
                resourceName: c1f6bfd2.kueue.x-k8s.io
              controller:
                groupKindConcurrency:
                  Job.batch: 5
                  Pod: 5
                  Workload.kueue.x-k8s.io: 5
                  LocalQueue.kueue.x-k8s.io: 1
                  ClusterQueue.kueue.x-k8s.io: 1
                  ResourceFlavor.kueue.x-k8s.io: 1
              clientConnection:
                qps: 50
                burst: 100
              waitForPodsReady:
                enable: true
                timeout: 5m
                blockAdmission: true
                requeuingStrategy:
                  timestamp: Eviction
                  backoffLimitCount: null # null indicates infinite requeuing
                  backoffBaseSeconds: 60
                  backoffMaxSeconds: 3600
              integrations:
                frameworks:
                - "batch/job"
                - "kubeflow.org/mpijob"
                - "ray.io/rayjob"
                - "ray.io/raycluster"
                - "jobset.x-k8s.io/jobset"
                - "kubeflow.org/paddlejob"
                - "kubeflow.org/pytorchjob"
                - "kubeflow.org/tfjob"
                - "kubeflow.org/xgboostjob"
              fairSharing:
               enable: true
               preemptionStrategies: [LessThanOrEqualToFinalShare, LessThanInitialShare]
      deploymentRestarts:
        - namespace: kueue-system
          name: kueue-controller-manager
      timeout: 10m

  - id: config-sleep
    type: Sleep
    params:
      timeout: 5s

  # Configure nodes
  - id: configure-nodes
    type: Configure
    params:
      nodes:
        - type: cpu-node
          count: 5
          resources:
            cpu: 15100m # KWOK potrzebuje 100m → 15000m dostępne
            memory: "15050Mi" # KWOK potrzebuje 50Mi → 15000Mi dostępne
            pods: 110
      timeout: 5m

  # Create namespaces for the three tenants
  - id: create-namespaces
    type: Configure
    params:
      namespaces:
        - name: tenant-a
          op: create
        - name: tenant-b
          op: create
        - name: tenant-c
          op: create
      timeout: 1m

  # Register Kueue-specific resources
  - id: register-cluster-queue
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/cluster-queue.yaml"

  - id: register-local-queue
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/local-queue.yaml"

  - id: register-resource-flavor
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/resource-flavor.yaml"

  - id: register-namespace
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/k8s/namespace.yaml"

  - id: register-job-batch-1
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v1-batch1-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-batch-2
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v1-batch2-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-batch-3
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/kueue/job.yaml"
      nameFormat: "fairshare-v1-batch3-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: create-resource-flavor
    type: SubmitObj
    params:
      refTaskId: register-resource-flavor
      canExist: true
      params:
        name: "resource-flavor"
        nodeLabels:
          type: "kwok"

  # Create a cohort and three cluster queues with equal weight
  - id: create-cluster-queue-a
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-a-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
              - pods
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 25000m # Gwarantowane 25 CPU (1/3 klastra)
                    borrowingLimit: 50000m # Może pożyczyć dodatkowe 50 CPU
                    lendingLimit: 25000m # Może udostępnić do 25 CPU innym
                  - name: memory
                    nominalQuota: 25000Mi # Gwarantowane 25Gi pamięci (1/3 klastra)
                    borrowingLimit: 50000Mi # Może pożyczyć dodatkowe 50Gi
                    lendingLimit: 25000Mi # Może udostępnić do 25Gi innym
                  - name: pods
                    nominalQuota: 183 # 1/3 z łącznej liczby 550 podów
                    borrowingLimit: 367 # 2/3 z łącznej liczby 550 podów
                    lendingLimit: 183 # Maksymalnie może udostępnić swój przydział

  - id: create-cluster-queue-b
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-b-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
              - pods
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 25000m # Gwarantowane 25 CPU (1/3 klastra)
                    borrowingLimit: 50000m # Może pożyczyć dodatkowe 50 CPU
                    lendingLimit: 25000m # Może udostępnić do 25 CPU innym
                  - name: memory
                    nominalQuota: 25000Mi # Gwarantowane 25Gi pamięci (1/3 klastra)
                    borrowingLimit: 50000Mi # Może pożyczyć dodatkowe 50Gi
                    lendingLimit: 25000Mi # Może udostępnić do 25Gi innym
                  - name: pods
                    nominalQuota: 183 # 1/3 z łącznej liczby 550 podów
                    borrowingLimit: 367 # 2/3 z łącznej liczby 550 podów
                    lendingLimit: 183 # Maksymalnie może udostępnić swój przydział

  - id: create-cluster-queue-c
    type: SubmitObj
    params:
      refTaskId: register-cluster-queue
      canExist: true
      params:
        name: tenant-c-cq
        cohort: fairshare-cohort
        fairSharing:
          weight: 1
        flavorFungibility:
          whenCanBorrow: Borrow
          whenCanPreempt: Preempt
        preemption:
          borrowWithinCohort:
            policy: Never
          reclaimWithinCohort: Any
          withinClusterQueue: Never
        resourceGroups:
          - coveredResources:
              - cpu
              - memory
              - pods
            flavors:
              - name: resource-flavor
                resources:
                  - name: cpu
                    nominalQuota: 25000m # Gwarantowane 25 CPU (1/3 klastra)
                    borrowingLimit: 50000m # Może pożyczyć dodatkowe 50 CPU
                    lendingLimit: 25000m # Może udostępnić do 25 CPU innym
                  - name: memory
                    nominalQuota: 25000Mi # Gwarantowane 25Gi pamięci (1/3 klastra)
                    borrowingLimit: 50000Mi # Może pożyczyć dodatkowe 50Gi
                    lendingLimit: 25000Mi # Może udostępnić do 25Gi innym
                  - name: pods
                    nominalQuota: 183 # 1/3 z łącznej liczby 550 podów
                    borrowingLimit: 367 # 2/3 z łącznej liczby 550 podów
                    lendingLimit: 183 # Maksymalnie może udostępnić swój przydział

  # Create local queues for all tenants
  - id: create-local-queue-a
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-a-queue
        namespace: tenant-a
        clusterQueue: tenant-a-cq

  - id: create-local-queue-b
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-b-queue
        namespace: tenant-b
        clusterQueue: tenant-b-cq

  - id: create-local-queue-c
    type: SubmitObj
    params:
      refTaskId: register-local-queue
      canExist: true
      params:
        name: tenant-c-queue
        namespace: tenant-c
        clusterQueue: tenant-c-cq

  # Wysłanie zadań w naprzemienny sposób, aby lepiej symulować realistyczne obciążenie
  # i obserwować dynamikę fair share między tenantami

  # Runda 1: Pierwszy batch zadań dla wszystkich tenantów
  - id: submit-jobs-tenant-a-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-a
        queueName: tenant-a-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-tenants1a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-b
        queueName: tenant-b-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-tenants1b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-c
        queueName: tenant-c-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-rounds1
    type: Sleep
    params:
      timeout: 60s

  # Runda 2: Drugi batch zadań dla wszystkich tenantów
  - id: submit-jobs-tenant-a-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-a
        queueName: tenant-a-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-tenants2a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-b
        queueName: tenant-b-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-tenants2b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-c
        queueName: tenant-c-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-rounds2
    type: Sleep
    params:
      timeout: 60s

  # Runda 3: Trzeci batch zadań dla wszystkich tenantów
  - id: submit-jobs-tenant-a-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-a
        queueName: tenant-a-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-tenants3a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-b
        queueName: tenant-b-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"

  - id: wait-between-tenants3b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-c
        queueName: tenant-c-queue
        replicas: 1
        completionMode: NonIndexed
        image: ubuntu
        cpu: 1000m
        memory: 1000Mi
        ttl: "5m"
