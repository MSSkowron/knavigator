name: volcano-fair-share-benchmark-v2-guarantees
description: |
  Weighted Fair Share benchmark for Volcano (Guarantees).
tasks:
  # Configure Volcano
  - id: configure-volcano
    type: Configure
    params:
      configmaps:
        - name: volcano-scheduler-configmap
          namespace: volcano-system
          op: create
          data:
            volcano-scheduler.conf: |
              actions: "enqueue, allocate, reclaim"
              tiers:
              - plugins:
                - name: priority
              - plugins:
                - name: drf
                  enablePreemptable: true
                - name: predicates
                - name: proportion
                - name: nodeorder
                - name: binpack
      deploymentRestarts:
        - namespace: volcano-system
          name: volcano-scheduler
      timeout: 10m

  - id: config-sleep
    type: Sleep
    params:
      timeout: 5s

  # Configure nodes - 10 węzłów po 12 CPU i 12 RAM każdy
  - id: configure-nodes
    type: Configure
    params:
      nodes:
        - type: cpu-node
          count: 10
          resources:
            cpu: 12100m # KWOK potrzebuje 100m → 12000m dostępne
            memory: "12050Mi" # KWOK potrzebuje 50Mi → 12000Mi dostępne
            pods: 1000
      timeout: 5m

  # Create namespaces for six tenants
  - id: create-namespaces
    type: Configure
    params:
      namespaces:
        - name: tenant-a
          op: create
        - name: tenant-b
          op: create
        - name: tenant-c
          op: create
        - name: tenant-d
          op: create
        - name: tenant-e
          op: create
        - name: tenant-f
          op: create
      timeout: 1m

  # Register Volcano resources (Queue, Job)
  - id: register-queue
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/queue.yml"

  - id: register-job-p1
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/job.yml"
      nameFormat: "f2-p1-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-p2
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/job.yml"
      nameFormat: "f2-p2-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: register-job-p3
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/job.yml"
      nameFormat: "f2-p3-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-[0-9]-.*"
      podCount: "{{.replicas}}"

  - id: create-queue-a
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-a-queue"
        reclaimable: true
        priority: 1
        weight: 4
        guarantee:
          resource:
            cpu: 36000m # GUARANTEE 4/13
            memory: 36000Mi # GUARANTEE 4/13
        capability:
          cpu: 120000m
          memory: 120000Mi

  - id: create-queue-b
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-b-queue"
        reclaimable: true
        priority: 1
        weight: 3
        guarantee:
          resource:
            cpu: 27000m # GUARANTEE 3/13
            memory: 27000Mi # GUARANTEE 3/13
        capability:
          cpu: 120000m
          memory: 120000Mi

  - id: create-queue-c
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-c-queue"
        reclaimable: true
        priority: 1
        weight: 2
        guarantee:
          resource:
            cpu: 18000m # GUARANTEE 2/13
            memory: 18000Mi # GUARANTEE 2/13
        capability:
          cpu: 120000m
          memory: 120000Mi

  - id: create-queue-d
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-d-queue"
        reclaimable: true
        priority: 1
        weight: 2
        guarantee:
          resource:
            cpu: 18000m # GUARANTEE 2/13
            memory: 18000Mi # GUARANTEE 2/13
        capability:
          cpu: 120000m
          memory: 120000Mi

  - id: create-queue-e
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-e-queue"
        reclaimable: true
        priority: 1
        weight: 1
        guarantee:
          resource:
            cpu: 9000m # GUARANTEE 1/13
            memory: 9000Mi # GUARANTEE 1/13
        capability:
          cpu: 120000m
          memory: 120000Mi

  - id: create-queue-f
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-f-queue"
        reclaimable: true
        priority: 1
        weight: 1
        guarantee:
          resource:
            cpu: 9000m # GUARANTEE 1/13
            memory: 9000Mi # GUARANTEE 1/13
        capability:
          cpu: 120000m
          memory: 120000Mi

  # RUNDA 1
  - id: phase1
    type: Parallel
    params:
      tasks:
        - type: SubmitObj
          params:
            refTaskId: register-job-p1
            count: 20
            params:
              namespace: tenant-a
              queue: tenant-a-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p1
            count: 20
            params:
              namespace: tenant-b
              queue: tenant-b-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p1
            count: 15
            params:
              namespace: tenant-c
              queue: tenant-c-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p1
            count: 15
            params:
              namespace: tenant-d
              queue: tenant-d-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p1
            count: 10
            params:
              namespace: tenant-e
              queue: tenant-e-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p1
            count: 10
            params:
              namespace: tenant-f
              queue: tenant-f-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

  - id: wait-between-rounds1
    type: Sleep
    params:
      timeout: 30s

  # RUNDA 2
  - id: phase2
    type: Parallel
    params:
      tasks:
        - type: SubmitObj
          params:
            refTaskId: register-job-p2
            count: 20
            params:
              namespace: tenant-a
              queue: tenant-a-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p2
            count: 20
            params:
              namespace: tenant-b
              queue: tenant-b-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p2
            count: 15
            params:
              namespace: tenant-c
              queue: tenant-c-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p2
            count: 15
            params:
              namespace: tenant-d
              queue: tenant-d-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p2
            count: 10
            params:
              namespace: tenant-e
              queue: tenant-e-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p2
            count: 10
            params:
              namespace: tenant-f
              queue: tenant-f-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

  - id: wait-between-rounds2
    type: Sleep
    params:
      timeout: 30s

  # RUNDA 3
  - id: phase3
    type: Parallel
    params:
      tasks:
        - type: SubmitObj
          params:
            refTaskId: register-job-p3
            count: 20
            params:
              namespace: tenant-a
              queue: tenant-a-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p3
            count: 20
            params:
              namespace: tenant-b
              queue: tenant-b-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p3
            count: 15
            params:
              namespace: tenant-c
              queue: tenant-c-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p3
            count: 15
            params:
              namespace: tenant-d
              queue: tenant-d-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p3
            count: 10
            params:
              namespace: tenant-e
              queue: tenant-e-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"

        - type: SubmitObj
          params:
            refTaskId: register-job-p3
            count: 10
            params:
              namespace: tenant-f
              queue: tenant-f-queue
              replicas: 1
              cpu: 1000m
              memory: 1000Mi
              ttl: "5m"
