name: volcano-fair-share-benchmark-v2-no-guarantees
description: |
  Weighted Fair Share benchmark for Volcano (No Guarantees).
  Tests proportional resource sharing (3:2:1 weights) in a homogeneous cluster
  with identical jobs under high load, without guarantees influencing the share.
tasks:
  # Configure Volcano (enable drf)
  - id: configure-volcano
    type: Configure
    params:
      configmaps:
        - name: volcano-scheduler-configmap
          namespace: volcano-system
          op: create
          data:
            volcano-scheduler.conf: |
              actions: "enqueue, allocate, reclaim"
              tiers:
              - plugins:
                - name: priority
                - name: gang
              - plugins:
                - name: drf # DRF handles weights
                  enablePreemptable: true
                - name: predicates
                - name: proportion
                - name: nodeorder
                - name: binpack
      deploymentRestarts:
        - namespace: volcano-system
          name: volcano-scheduler
      timeout: 10m

  - id: config-sleep
    type: Sleep
    params:
      timeout: 5s

  # Configure nodes (6 nodes, 16 CPU/16GB each = 96 CPU/96GB total)
  - id: configure-nodes
    type: Configure
    params:
      nodes:
        - type: cpu-node # Homogeneous nodes
          count: 6
          resources:
            cpu: 16100m
            memory: "16050Mi"
            pods: 110
      timeout: 5m

  # Create namespaces
  - id: create-namespaces
    type: Configure
    params:
      namespaces:
        - name: tenant-a
          op: create
        - name: tenant-b
          op: create
        - name: tenant-c
          op: create
      timeout: 1m

  # Register Volcano resources (Queue, Job)
  - id: register-queue
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/queue.yml"

  - id: register-job-batch-1
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/job.yml"
      nameFormat: "fairshare-v2-ng-b1-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-test-[0-9]+"
      podCount: "{{.replicas}}"

  - id: register-job-batch-2
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/job.yml"
      nameFormat: "fairshare-v2-ng-b2-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-test-[0-9]+"
      podCount: "{{.replicas}}"

  - id: register-job-batch-3
    type: RegisterObj
    params:
      template: "resources/benchmarks/fair-share/templates/volcano/job.yml"
      nameFormat: "fairshare-v2-ng-b3-job{{._ENUM_}}"
      podNameFormat: "{{._NAME_}}-test-[0-9]+"
      podCount: "{{.replicas}}"

  # Create Queues with weights 3:2:1 and NO guarantees
  - id: create-queue-a
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-a-queue"
        reclaimable: true
        priority: 1
        weight: 3 # WEIGHT 3
        guarantee:
          resource:
            cpu: 0m # NO GUARANTEE
            memory: 0Mi # NO GUARANTEE
        capability:
          cpu: 96000m # Cluster capacity
          memory: 96Gi # Cluster capacity

  - id: create-queue-b
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-b-queue"
        reclaimable: true
        priority: 1
        weight: 2 # WEIGHT 2
        guarantee:
          resource:
            cpu: 0m # NO GUARANTEE
            memory: 0Mi # NO GUARANTEE
        capability:
          cpu: 96000m
          memory: 96Gi

  - id: create-queue-c
    type: SubmitObj
    params:
      refTaskId: register-queue
      canExist: true
      params:
        name: "tenant-c-queue"
        reclaimable: true
        priority: 1
        weight: 1 # WEIGHT 1
        guarantee:
          resource:
            cpu: 0m # NO GUARANTEE
            memory: 0Mi # NO GUARANTEE
        capability:
          cpu: 96000m
          memory: 96Gi

  # --- Job Submission Rounds ---
  # Round 1 (A:30, B:20, C:10) - Tasks req <1 CPU, 1 GB RAM>
  - id: submit-jobs-tenant-a-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 30
      params:
        namespace: tenant-a
        minAvailable: 1
        replicas: 1
        queue: tenant-a-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait1a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 20
      params:
        namespace: tenant-b
        minAvailable: 1
        replicas: 1
        queue: tenant-b-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait1b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch1
    type: SubmitObj
    params:
      refTaskId: register-job-batch-1
      count: 10
      params:
        namespace: tenant-c
        minAvailable: 1
        replicas: 1
        queue: tenant-c-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait1r
    type: Sleep
    params:
      timeout: 60s

  # Round 2 (A:25, B:15, C:10)
  - id: submit-jobs-tenant-a-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 25
      params:
        namespace: tenant-a
        minAvailable: 1
        replicas: 1
        queue: tenant-a-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait2a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 15
      params:
        namespace: tenant-b
        minAvailable: 1
        replicas: 1
        queue: tenant-b-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait2b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch2
    type: SubmitObj
    params:
      refTaskId: register-job-batch-2
      count: 10
      params:
        namespace: tenant-c
        minAvailable: 1
        replicas: 1
        queue: tenant-c-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait2r
    type: Sleep
    params:
      timeout: 60s

  # Round 3 (A:20, B:15, C:10)
  - id: submit-jobs-tenant-a-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 20
      params:
        namespace: tenant-a
        minAvailable: 1
        replicas: 1
        queue: tenant-a-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait3a
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-b-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 15
      params:
        namespace: tenant-b
        minAvailable: 1
        replicas: 1
        queue: tenant-b-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"

  - id: wait3b
    type: Sleep
    params:
      timeout: 15s

  - id: submit-jobs-tenant-c-batch3
    type: SubmitObj
    params:
      refTaskId: register-job-batch-3
      count: 10
      params:
        namespace: tenant-c
        minAvailable: 1
        replicas: 1
        queue: tenant-c-queue
        image: ubuntu
        cpu: 1000m
        memory: 1Gi
        ttl: "5m"
