# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: kueue-performance-benchmark
description: |
  A comprehensive benchmark for Kueue's scheduling performance that gradually
  increases load to test scheduling throughput and efficiency.
tasks:
# Configure node
- id: configure-nodes
  type: Configure
  params:
    nodes:
    - type: hpc.gpu
      count: 500
      labels:
        nvidia.com/gpu.count: "8"
        nvidia.com/mlnxnics:  "16"
        nvidia.com/gpu.product: NVIDIA-A100-SXM4-80GB
      resources:
        cpu: 128
        memory: "128Gi"
        pods: 110
        nvidia.com/gpu: 8
        hugepages-1Gi: 0
        hugepages-2Mi: 0
        ephemeral-storage: "30Ti"
    timeout: 5m

# Register Kueue-specific resources
- id: register-cluster-queue
  type: RegisterObj
  params:
    template: "resources/templates/kueue/cluster-queue.yaml"
- id: register-local-queue
  type: RegisterObj
  params:
    template: "resources/templates/kueue/local-queue.yaml"
- id: register-resource-flavor
  type: RegisterObj
  params:
    template: "resources/templates/kueue/resource-flavor.yaml"
- id: register-job
  type: RegisterObj
  params:
    template: "resources/benchmarks/performance/templates/kueue/job.yaml"
    nameFormat: "perftest-job{{._ENUM_}}"
    podNameFormat: "{{._NAME_}}-[0-9]-.*"
    podCount: "{{.parallelism}}"

# Create ResourceFlavor, ClusterQueue, LocalQueue
- id: create-resource-flavor
  type: SubmitObj
  params:
    refTaskId: register-resource-flavor
    canExist: true
    params:
      name: "gpu-node"
      nodeLabels:
        nvidia.com/gpu.count: "8"
- id: create-cluster-queue
  type: SubmitObj
  params:
    refTaskId: register-cluster-queue
    canExist: true
    params:
      name: team
      flavor: gpu-node
      cpu: 64000000m    # 128 cores × 500 nodes (64000 cores total)
      memory: 64000Gi   # 128Gi × 500 nodes
      pods: 55000       # 110 pods × 500 nodes
      gpu: 4000         # 8 GPUs × 500 nodes
- id: create-local-queue
  type: SubmitObj
  params:
    refTaskId: register-local-queue
    canExist: true
    params:
      name: team-queue
      namespace: default
      clusterQueue: team

# Configure Kueue with optimized settings
- id: configure-kueue
  type: Configure
  params:
    configmaps:
    - name: kueue-manager-config
      namespace: kueue-system
      op: create
      data:
        controller_manager_config.yaml: |
          apiVersion: config.kueue.x-k8s.io/v1beta1
          kind: Configuration
          health:
            healthProbeBindAddress: :8081
          metrics:
            bindAddress: :8080
          # enableClusterQueueResources: true
          webhook:
            port: 9443
          leaderElection:
            leaderElect: true
            resourceName: c1f6bfd2.kueue.x-k8s.io
          controller:
            groupKindConcurrency:
              Job.batch: 50              # Increased from 5
              Pod: 50                    # Increased from 5
              Workload.kueue.x-k8s.io: 50 # Increased from 5
              LocalQueue.kueue.x-k8s.io: 5  # Increased from 1
              ClusterQueue.kueue.x-k8s.io: 5 # Increased from 1
              ResourceFlavor.kueue.x-k8s.io: 5 # Increased from 1
          clientConnection:
            qps: 100                    # Increased from 50
            burst: 200                  # Increased from 100
          #pprofBindAddress: :8083
          waitForPodsReady:
            enable: true
            timeout: 5m
            blockAdmission: true
            requeuingStrategy:
              timestamp: Eviction
              backoffLimitCount: null
              backoffBaseSeconds: 60
              backoffMaxSeconds: 3600
          #manageJobsWithoutQueueName: true
          #internalCertManagement:
          #  enable: false
          #  webhookServiceName: ""
          #  webhookSecretName: ""
          integrations:
            frameworks:
            - "batch/job"
            - "kubeflow.org/mpijob"
            - "ray.io/rayjob"
            - "ray.io/raycluster"
            - "jobset.x-k8s.io/jobset"
            - "kubeflow.org/mxjob"
            - "kubeflow.org/paddlejob"
            - "kubeflow.org/pytorchjob"
            - "kubeflow.org/tfjob"
            - "kubeflow.org/xgboostjob"
          #  - "pod"
          #  externalFrameworks:
          #  - "Foo.v1.example.com"
            podOptions:
              namespaceSelector:
                matchExpressions:
                  - key: kubernetes.io/metadata.name
                    operator: NotIn
                    values: [ kube-system, kueue-system ]
          #fairSharing:
          #  enable: true
          #  preemptionStrategies: [LessThanOrEqualToFinalShare, LessThanInitialShare]
          #resources:
          #  excludeResourcePrefixes: []
    deploymentRestarts:
    - namespace: kueue-system
      name: kueue-controller-manager
    timeout: 10m

# Warmup phase - submit small batch to get system ready
- id: warmup-batch
  type: SubmitObj
  params:
    refTaskId: register-job
    count: 20
    params:
      namespace: default
      parallelism: 1
      completions: 1
      completionMode: NonIndexed
      queueName: team-queue
      image: ubuntu
      cpu: 1
      memory: 128Mi
      gpu: 1
      ttl: "15s"

- id: delay1
  type: Sleep
  params:
    timeout: 10s

# Wave 1: Submit first batch of 50 jobs
- id: wave1
  type: SubmitObj
  params:
    refTaskId: register-job
    count: 50
    params:
      namespace: default
      parallelism: 1
      completions: 1
      completionMode: NonIndexed
      queueName: team-queue
      image: ubuntu
      cpu: 1
      memory: 128Mi
      gpu: 1
      ttl: "30s"

# Brief delay between waves
- id: delay1
  type: Sleep
  params:
    timeout: 10s

# Wave 2: Submit second batch of 50 jobs
- id: wave2
  type: SubmitObj
  params:
    refTaskId: register-job
    count: 50
    params:
      namespace: default
      parallelism: 1
      completions: 1
      completionMode: NonIndexed
      queueName: team-queue
      image: ubuntu
      cpu: 1
      memory: 128Mi
      gpu: 1
      ttl: "30s"

# Brief delay between waves
- id: delay2
  type: Sleep
  params:
    timeout: 10s

# Wave 3: Submit third batch of 50 jobs
- id: wave3
  type: SubmitObj
  params:
    refTaskId: register-job
    count: 50
    params:
      namespace: default
      parallelism: 1
      completions: 1
      completionMode: NonIndexed
      queueName: team-queue
      image: ubuntu
      cpu: 1
      memory: 128Mi
      gpu: 1
      ttl: "30s"

# Brief delay between waves
- id: delay3
  type: Sleep
  params:
    timeout: 10s

# Wave 4: Submit fourth batch of 50 jobs
- id: wave4
  type: SubmitObj
  params:
    refTaskId: register-job
    count: 50
    params:
      namespace: default
      parallelism: 1
      completions: 1
      completionMode: NonIndexed
      queueName: team-queue
      image: ubuntu
      cpu: 1
      memory: 128Mi
      gpu: 1
      ttl: "30s"

# Brief delay between waves
- id: delay4
  type: Sleep
  params:
    timeout: 15s

# Peak load test: Submit larger batch of 200 jobs at once
- id: peak-load
  type: SubmitObj
  params:
    refTaskId: register-job
    count: 200
    params:
      namespace: default
      parallelism: 1
      completions: 1
      completionMode: NonIndexed
      queueName: team-queue
      image: ubuntu
      cpu: 1
      memory: 128Mi
      gpu: 1
      ttl: "30s"

# Allow time for peak load processing
- id: peak-processing
  type: Sleep
  params:
    timeout: 60s
